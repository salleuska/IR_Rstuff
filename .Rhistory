#setwd("~/Scrivania/esiti 1992")
data <- read.delim("heidel_details.txt", header=F)
colnames(data) <- c("id", "type", "value", "term", "creation")
setwd("/media/DATA/Ubuntu/Rstuff")
data <- read.delim("heidel_details.txt", header=F)
colnames(data) <- c("id", "type", "value", "term", "creation")
setwd("/media/DATA/Ubuntu/Rstuff")
data <- read.delim("heidel_details.txt", header=F)
colnames(data) <- c("id", "type", "value", "term", "creation")
str(data)
# numero documenti
length(unique(data$id))
levels(data$type)
summary(data)
summary(data$type)/length(data$type)
plot(data$type)
typefor <- function(tipo, valore, plot = FALSE)
{
par(mfrow = c(2, 2))
#e.g. per ogni documento voglio il numero di espressioni per tipo
# tipo = data$id, valore = data$type
tipo.per.valore <- tapply(tipo, valore, summary, maxsum = Inf)
for(i in 1:length(unique(valore)))
{
d <- data.frame(tipo.per.valore[[i]])
cat("Distribuzione nei documenti", levels(data$type)[i], "\n")
print(summary(d))
cat("******************* \n")
if(plot == TRUE)
{
hist(d$tip, breaks = 100, prob = T, main= paste("distribution", unique(data$type)[i]))
}
}
}
typefor(tipo= data$value, data$type, plot = T)
type.per.doc <- tapply(data$id, data$type, summary, maxsum = Inf)
str(type.per.doc)
# DATE per documento
date <- type.per.doc[[1]]
date <- data.frame(date)
str(date)
summary(date)
rownames(date)[which(date == 271)]
data[data$id == rownames(date)[which(date == 271)], ]
summary(date[-which(date == 271), ])
# valori
sort(as.vector(date$date))
# Distribuzione numero di date per documento
hist(date$typ, breaks = 200, prob = T, main= paste("distribution", unique(data$type)[1]))
rownames(date)[which(date == 271)]
data[data$id == rownames(date)[which(date == 271)], ]
summary(date[-which(date == 271), ])
sort(as.vector(date$date))
hist(date$typ, breaks = 200, prob = T, main= paste("distribution", unique(data$type)[1]))
duration <- type.per.doc[[2]]
duration <- data.frame(duration)
head(duration)
length(which(duration$duration != 0))
summary(duration)
rownames(duration)[which(duration == 63)]
data[data$id == rownames(duration)[which(duration != 0)], ]
length(unique(rownames(duration)[which(duration != 0)]))
library(gdata)
library(gdata)
id.map <- mapLevels(data$id)
str(data)
setwd("/media/DATA/Ubuntu/Rstuff")
data <- read.delim("heidel_details.txt", header=F)
colnames(data) <- c("id", "type", "value", "term", "creation")
str(data)
#setwd("~/Scrivania/esiti 1992")
setwd("/media/DATA/Ubuntu/Rstuff")
data <- read.delim("heidel_details.txt", header=F)
colnames(data) <- c("id", "type", "value", "term", "creation")
str(data)
# numero documenti
length(unique(data$id))
# check
levels(data$type)
summary(data)
summary(data$type)/length(data$type)
length(unique(data$id))
setwd("/media/DATA/Ubuntu/Rstuff")
data <- read.delim("heidel_details.txt", header=F)
colnames(data) <- c("id", "type", "value", "term", "creation")
str(data)
# numero documenti
length(unique(data$id))
# check
levels(data$type)
summary(data)
length(unique(data$id))
length(data$id)
length(unique(data$id))
length(unique(data$id))
summary(data)
summary(data,10)
summary(data$type)/length(data$type)
plot(data$type)
typefor <- function(tipo, valore, plot = FALSE)
{
par(mfrow = c(2, 2))
#e.g. per ogni documento voglio il numero di espressioni per tipo
# tipo = data$id, valore = data$type
tipo.per.valore <- tapply(tipo, valore, summary, maxsum = Inf)
for(i in 1:length(unique(valore)))
{
d <- data.frame(tipo.per.valore[[i]])
cat("Distribuzione nei documenti", levels(data$type)[i], "\n")
print(summary(d))
cat("******************* \n")
if(plot == TRUE)
{
hist(d$tip, breaks = 100, prob = T, main= paste("distribution", unique(data$type)[i]))
}
}
}
typefor <- function(tipo, valore, plot = FALSE)
{
par(mfrow = c(2, 2))
#e.g. per ogni documento voglio il numero di espressioni per tipo
# tipo = data$id, valore = data$type
tipo.per.valore <- tapply(tipo, valore, summary, maxsum = Inf)
for(i in 1:length(unique(valore)))
{
d <- data.frame(tipo.per.valore[[i]])
cat("Distribuzione nei documenti", levels(data$type)[i], "\n")
print(summary(d))
cat("******************* \n")
if(plot == TRUE)
{
hist(d$tip, breaks = 100, prob = T, main= paste("distribution", unique(data$type)[i]))
}
}
}
typefor(tipo= data$value, data$type, plot = T)
typefor <- function(tipo, valore, plot = FALSE)
{
par(mfrow = c(2, 2))
#e.g. per ogni documento voglio il numero di espressioni per tipo
# tipo = data$id, valore = data$type
tipo.per.valore <- tapply(tipo, valore, summary, maxsum = Inf)
for(i in 1:length(unique(valore)))
{
d <- data.frame(tipo.per.valore[[i]])
cat("Distribuzione nei documenti", levels(data$type)[i], "\n")
print(summary(d))
cat("******************* \n")
if(plot == TRUE)
{
hist(d$tip, breaks = 1000, prob = T, main= paste("distribution", unique(data$type)[i]))
}
}
}
typefor(tipo= data$value, data$type, plot = T)
typefor <- function(tipo, valore, plot = FALSE)
{
par(mfrow = c(2, 2))
#e.g. per ogni documento voglio il numero di espressioni per tipo
# tipo = data$id, valore = data$type
tipo.per.valore <- tapply(tipo, valore, summary, maxsum = Inf)
for(i in 1:length(unique(valore)))
{
d <- data.frame(tipo.per.valore[[i]])
cat("Distribuzione nei documenti", levels(data$type)[i], "\n")
print(summary(d))
cat("******************* \n")
if(plot == TRUE)
{
hist(d$tip, breaks = 10, prob = T, main= paste("distribution", unique(data$type)[i]))
}
}
}
typefor(tipo= data$value, data$type, plot = T)
typefor <- function(tipo, valore, plot = FALSE)
{
par(mfrow = c(2, 2))
#e.g. per ogni documento voglio il numero di espressioni per tipo
# tipo = data$id, valore = data$type
tipo.per.valore <- tapply(tipo, valore, summary, maxsum = 2000)
for(i in 1:length(unique(valore)))
{
d <- data.frame(tipo.per.valore[[i]])
cat("Distribuzione nei documenti", levels(data$type)[i], "\n")
print(summary(d))
cat("******************* \n")
if(plot == TRUE)
{
hist(d$tip, breaks = 100, prob = T, main= paste("distribution", unique(data$type)[i]))
}
}
}
typefor(tipo= data$value, data$type, plot = T)
type.per.doc <- tapply(data$id, data$type, summary, maxsum = Inf)
str(type.per.doc)
# DATE per documento
date <- type.per.doc[[1]]
date <- data.frame(date)
str(date)
summary(date)
rownames(date)[which(date == 271)]
data[data$id == rownames(date)[which(date == 271)], ]
summary(date[-which(date == 271), ])
type.per.doc <- tapply(data$id, data$type, summary, maxsum = Inf)
str(type.per.doc)
# DATE per documento
date <- type.per.doc[[1]]
date <- data.frame(date)
str(date)
summary(date)
rownames(date)[which(date == 271)]
data[data$id == rownames(date)[which(date == 271)], ]
summary(date[-which(date == 271), ])
sort(as.vector(date$date))
hist(date$typ, breaks = 200, prob = T, main= paste("distribution", unique(data$type)[1]))
duration <- type.per.doc[[2]]
duration <- data.frame(duration)
head(duration)
length(which(duration$duration != 0))
summary(duration)
rownames(duration)[which(duration == 63)]
data[data$id == rownames(duration)[which(duration != 0)], ]
length(unique(rownames(duration)[which(duration != 0)]))
library(gdata)
id.map <- mapLevels(data$id)
install.packages("gdata")
library(gdata)
id.map <- mapLevels(data$id)
View(duration)
