data.raw <- read.delim("heidel_details.txt", header=F)
summary(data.raw)
# Mantengo una copia dei dati grezzi (sai che fai casini)
data <- data.raw
colnames(data) <- c("id", "type", "value", "term", "creation")
str(data)
# numero documenti
length(unique(data$id))
# check
levels(data$type)
data <- read.delim("heidel_details.txt", header=F)
summary(data)
# Mantengo una copia dei dati grezzi (sai che fai casini)
colnames(data) <- c("id", "type", "value", "term", "creation")
str(data)
# numero documenti
length(unique(data$id))
# check
levels(data$type)
str(data)
summary(data)
typefor <- function(tipo, valore)
{
par(mfrow = c(2, 2))
#e.g. per ogni documento voglio il numero di espressioni per tipo
# tipo = data$id, valore = data$type
tipo.per.valore <- tapply(tipo, valore, summary, maxsum = Inf)
for(i in 1:length(unique(valore)))
{
d <- data.frame(tipo.per.valore[[i]])
cat("Distribuzione nei documenti", levels(data$type)[i], "\n")
print(summary(d))
cat("******************* \n")
#hist(d$tip, breaks = 100, prob = T, main= paste("distribution", unique(data$type)[i]))
}
}
cat("Statistiche", levels(data$type)[1])
typefor(tipo= data$value, data$type)
typefor <- function(tipo, valore, plot = FALSE)
{
par(mfrow = c(2, 2))
#e.g. per ogni documento voglio il numero di espressioni per tipo
# tipo = data$id, valore = data$type
tipo.per.valore <- tapply(tipo, valore, summary, maxsum = Inf)
for(i in 1:length(unique(valore)))
{
d <- data.frame(tipo.per.valore[[i]])
cat("Distribuzione nei documenti", levels(data$type)[i], "\n")
print(summary(d))
cat("******************* \n")
if(plot == TRUE)
{
hist(d$tip, breaks = 100, prob = T, main= paste("distribution", unique(data$type)[i]))
}
}
}
typefor(tipo= data$value, data$type, plot = T)
typefor(tipo= data$value, data$type)
